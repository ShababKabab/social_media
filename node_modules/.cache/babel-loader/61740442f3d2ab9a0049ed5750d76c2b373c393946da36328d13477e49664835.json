{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL, api } from \"../../config/api\";\nimport { GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS, SEARCH_USER_FAILURE, SEARCH_USER_REQUEST, SEARCH_USER_SUCCESS, UPDATE_PROFILE_FAILURE, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS } from \"./auth.actionType\";\nexport const loginUserAction = loginData => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/auth/signin`, loginData.data);\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n    }\n    console.log(\"login success\", data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.jwt\n    });\n  } catch (error) {\n    console.log(\"------\", error);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const registerUserAction = loginData => async dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(`${API_BASE_URL}/auth/signup`, loginData.data);\n    if (data.token) {\n      localStorage.setItem(\"jwt\", data.token);\n    }\n    console.log(\"register----\", data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data.jwt\n    });\n  } catch (error) {\n    console.log(\"------\", error);\n    dispatch({\n      type: REGISTER_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const getProfileAction = jwt => async dispatch => {\n  dispatch({\n    type: GET_PROFILE_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/api/users/profile`, {\n      headers: {\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    });\n    console.log(\"profile ----\", data);\n    dispatch({\n      type: GET_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"------\", error);\n    dispatch({\n      type: GET_PROFILE_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const updateProfileAction = reqData => async dispatch => {\n  dispatch({\n    type: UPDATE_PROFILE_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.put(`${API_BASE_URL}/api/users`, reqData);\n    console.log(\"update profile ----\", data);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"------\", error);\n    dispatch({\n      type: UPDATE_PROFILE_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const searchUser = query => async dispatch => {\n  dispatch({\n    type: SEARCH_USER_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await api.get(`/api/users/search?query=${query}`);\n    console.log(\" search user ----\", data);\n    dispatch({\n      type: SEARCH_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"------\", error);\n    dispatch({\n      type: SEARCH_USER_FAILURE,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","GET_PROFILE_FAILURE","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","SEARCH_USER_FAILURE","SEARCH_USER_REQUEST","SEARCH_USER_SUCCESS","UPDATE_PROFILE_FAILURE","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","loginUserAction","loginData","dispatch","type","data","post","token","localStorage","setItem","console","log","payload","jwt","error","registerUserAction","getProfileAction","get","headers","updateProfileAction","reqData","put","searchUser","query"],"sources":["/home/shabab/VS-Code code/sabab_social/src/Redux/Auth/auth.action.js"],"sourcesContent":["import axios from \"axios\"\nimport { API_BASE_URL, api } from \"../../config/api\"\nimport { GET_PROFILE_FAILURE, GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS, SEARCH_USER_FAILURE, SEARCH_USER_REQUEST, SEARCH_USER_SUCCESS, UPDATE_PROFILE_FAILURE, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS } from \"./auth.actionType\"\n\nexport const loginUserAction=(loginData)=>async(dispatch)=>{\n    dispatch({type:LOGIN_REQUEST})\n    try {\n        const {data}=await axios.post(`${API_BASE_URL}/auth/signin`,loginData.data)\n\n        if(data.token){\n            localStorage.setItem(\"jwt\",data.token)\n\n        }\n        console.log(\"login success\",data)\n        dispatch({type:LOGIN_SUCCESS,payload:data.jwt})\n\n    } catch (error) {\n        console.log(\"------\", error)\n        dispatch({type:LOGIN_FAILURE,payload:error})\n    }\n}\n\nexport const registerUserAction=(loginData)=>async(dispatch)=>{\n    dispatch({type:REGISTER_REQUEST})\n    try {\n        const {data}=await axios.post(`${API_BASE_URL}/auth/signup`,loginData.data)\n\n        if(data.token){\n            localStorage.setItem(\"jwt\",data.token)\n\n        }\n        console.log(\"register----\",data)\n        dispatch({type:REGISTER_SUCCESS,payload:data.jwt})\n\n    } catch (error) {\n        console.log(\"------\", error)\n        dispatch({type:REGISTER_FAILURE,payload:error})\n    }\n};\n\nexport const getProfileAction=(jwt)=>async(dispatch)=>{\n    dispatch({type:GET_PROFILE_REQUEST})\n    try {\n        const {data}=await axios.get(`${API_BASE_URL}/api/users/profile`,{\n            headers:{\n                \"Authorization\": `Bearer ${jwt}`,\n            }\n        });\n\n        console.log(\"profile ----\",data)\n        dispatch({type:GET_PROFILE_SUCCESS,payload:data})\n\n    } catch (error) {\n        console.log(\"------\", error)\n        dispatch({type:GET_PROFILE_FAILURE,payload:error})\n    }\n};\n\nexport const updateProfileAction=(reqData)=>async(dispatch)=>{\n    dispatch({type:UPDATE_PROFILE_REQUEST})\n    try {\n        const {data}=await api.put(`${API_BASE_URL}/api/users`, reqData);\n\n        console.log(\"update profile ----\",data)\n        dispatch({type:UPDATE_PROFILE_SUCCESS,payload:data})\n\n    } catch (error) {\n        console.log(\"------\", error)\n        dispatch({type:UPDATE_PROFILE_FAILURE,payload:error})\n    }\n};\n\nexport const searchUser=(query)=>async(dispatch)=>{\n    dispatch({type:SEARCH_USER_REQUEST})\n    try {\n        const {data}=await api.get(`/api/users/search?query=${query}`);\n\n        console.log(\" search user ----\",data)\n        dispatch({type:SEARCH_USER_SUCCESS,payload:data})\n\n    } catch (error) {\n        console.log(\"------\", error)\n        dispatch({type:SEARCH_USER_FAILURE,payload:error})\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}